{"is_source_file": true, "format": "TypeScript", "description": "This is an Angular component file defining a NoteEditorComponent used for creating and editing notes within a note-taking application. It utilizes reactive forms, route parameters for mode switching, and interacts with a NotesService for CRUD operations.", "external_files": ["../../models/note.model", "../../services/notes.service", "./note-editor.component.html", "./note-editor.component.css"], "external_methods": ["inject()", "signal()", "computed()", "Validators.required", "Validators.maxLength", "this.route.paramMap.subscribe", "this.router.navigate", "this.notesService.getNote", "this.notesService.createNote", "this.notesService.updateNote", "this.notesService.deleteNote"], "published": ["NoteEditorComponent"], "classes": [{"name": "NoteEditorComponent", "description": "An Angular standalone component for editing or creating notes with reactive forms, route-driven behavior, and accessibility features."}], "methods": [{"name": "ngOnInit", "description": "Initializes the component, sets up reactive form, and handles route param changes to determine create/edit mode."}, {"name": "onSave", "description": "Handles saving the note, whether creating a new one or updating an existing one, with validation and error handling."}, {"name": "onCancel", "description": "Navigates back to the notes list without saving."}, {"name": "onDelete", "description": "Deletes the current note after user confirmation and navigates back to the list."}, {"name": "isTitleInvalid", "description": "Checks if the title input has validation errors to display appropriate feedback."}, {"name": "titleErrorMsg", "description": "Returns a user-friendly validation message for the title input."}], "calls": ["this.route.paramMap.subscribe", "this.router.navigate", "this.notesService.getNote", "this.notesService.createNote", "this.notesService.updateNote", "this.notesService.deleteNote", "globalThis.confirm"], "search-terms": ["Angular", "NoteEditorComponent", "ReactiveForms", "route-driven", "create note", "edit note", "notesService", "note ID", "form validation"], "state": 2, "file_id": 30, "knowledge_revision": 92, "git_revision": "", "revision_history": [{"82": ""}, {"88": ""}, {"89": ""}, {"91": ""}, {"92": ""}], "ctags": [{"_type": "tag", "name": "NoteEditorComponent", "path": "/home/kavia/workspace/code-generation/personal-notes-app-29354-29372/notes_frontend/src/app/features/note-editor/note-editor.component.ts", "pattern": "/^export class NoteEditorComponent implements OnInit {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "c", "path": "/home/kavia/workspace/code-generation/personal-notes-app-29354-29372/notes_frontend/src/app/features/note-editor/note-editor.component.ts", "pattern": "/^    const c = this.form.get('title');$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "confirmed", "path": "/home/kavia/workspace/code-generation/personal-notes-app-29354-29372/notes_frontend/src/app/features/note-editor/note-editor.component.ts", "pattern": "/^    const confirmed = typeof globalThis !== 'undefined' && typeof globalThis.confirm === 'functi/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "content", "path": "/home/kavia/workspace/code-generation/personal-notes-app-29354-29372/notes_frontend/src/app/features/note-editor/note-editor.component.ts", "pattern": "/^    const { title, content } = this.form.value as { title: string; content: string };$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "created", "path": "/home/kavia/workspace/code-generation/personal-notes-app-29354-29372/notes_frontend/src/app/features/note-editor/note-editor.component.ts", "pattern": "/^        const created = this.notesService.createNote({ title: title.trim(), content: (content ??/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "existing", "path": "/home/kavia/workspace/code-generation/personal-notes-app-29354-29372/notes_frontend/src/app/features/note-editor/note-editor.component.ts", "pattern": "/^        const existing = this.notesService.getNote(id);$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "fb", "path": "/home/kavia/workspace/code-generation/personal-notes-app-29354-29372/notes_frontend/src/app/features/note-editor/note-editor.component.ts", "pattern": "/^  private readonly fb = inject(FormBuilder);$/", "language": "TypeScript", "kind": "property", "scope": "NoteEditorComponent", "scopeKind": "class"}, {"_type": "tag", "name": "found", "path": "/home/kavia/workspace/code-generation/personal-notes-app-29354-29372/notes_frontend/src/app/features/note-editor/note-editor.component.ts", "pattern": "/^        const found = this.notesService.getNote(id);$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "g", "path": "/home/kavia/workspace/code-generation/personal-notes-app-29354-29372/notes_frontend/src/app/features/note-editor/note-editor.component.ts", "pattern": "/^        const g: any = typeof globalThis !== 'undefined' ? globalThis : undefined;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/personal-notes-app-29354-29372/notes_frontend/src/app/features/note-editor/note-editor.component.ts", "pattern": "/^        const id = this.noteId();$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/personal-notes-app-29354-29372/notes_frontend/src/app/features/note-editor/note-editor.component.ts", "pattern": "/^      const id = params.get('id');$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/personal-notes-app-29354-29372/notes_frontend/src/app/features/note-editor/note-editor.component.ts", "pattern": "/^    const id = this.noteId();$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "n", "path": "/home/kavia/workspace/code-generation/personal-notes-app-29354-29372/notes_frontend/src/app/features/note-editor/note-editor.component.ts", "pattern": "/^    const n = this.note();$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "title", "path": "/home/kavia/workspace/code-generation/personal-notes-app-29354-29372/notes_frontend/src/app/features/note-editor/note-editor.component.ts", "pattern": "/^          title: title.trim(),$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "title", "path": "/home/kavia/workspace/code-generation/personal-notes-app-29354-29372/notes_frontend/src/app/features/note-editor/note-editor.component.ts", "pattern": "/^    const { title, content } = this.form.value as { title: string; content: string };$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "updated", "path": "/home/kavia/workspace/code-generation/personal-notes-app-29354-29372/notes_frontend/src/app/features/note-editor/note-editor.component.ts", "pattern": "/^        const updated: Note = {$/", "language": "TypeScript", "kind": "constant"}], "hash": "fea0fa8603f9dfb514ee14d88bdf9d89", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/app/features/note-editor/note-editor.component.ts", "fields": [{"name": "private readonly fb = inject(FormBuilder);", "scope": "NoteEditorComponent", "scopeKind": "class", "description": "unavailable"}]}