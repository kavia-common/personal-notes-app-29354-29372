{"is_source_file": true, "format": "TypeScript", "description": "This file defines the Angular component 'NotesListComponent', responsible for displaying and managing a list of notes. It includes features like debounced search, highlighting the active note based on the route, and navigation to specific notes or creation of new notes.", "external_files": ["../../services/notes.service", "./notes-list.component.html", "./notes-list.component.css"], "external_methods": ["NotesService.listNotes", "router.navigate", "router.events.subscribe"], "published": ["NotesListComponent", "onQueryChange", "onInput", "openNote", "createNote", "isActive", "snippet", "tags"], "classes": [{"name": "NotesListComponent", "description": "Angular component that displays and manages a list of notes with search and navigation functionalities."}], "methods": [{"name": "ngOnInit", "description": "Initializes the component, sets up active note detection from URL, and builds the filtered notes stream."}, {"name": "onQueryChange", "description": "Handles changes in the search query input, updating the search filter."}, {"name": "onInput", "description": "Extracts input value from an event object and forwards it to onQueryChange."}, {"name": "openNote", "description": "Navigates to open a specific note based on its ID."}, {"name": "createNote", "description": "Navigates to create a new note."}, {"name": "isActive", "description": "Determines whether a given note is currently active based on the route."}, {"name": "updateActiveFromUrl", "description": "Parses the URL to update the active note ID."}, {"name": "snippet", "description": "Returns a short preview of the note content."}, {"name": "tags", "description": "Concatenates and returns the tags of a note as a comma-separated string."}], "calls": ["this.notesService.listNotes", "this.router.navigate", "this.router.events.subscribe", "this.updateActiveFromUrl"], "search-terms": ["NotesListComponent", "debounced search", "active note route", "Angular standalone component", "notes service integration", "route-based note activation"], "state": 2, "file_id": 27, "knowledge_revision": 80, "git_revision": "", "revision_history": [{"64": ""}, {"74": ""}, {"75": ""}, {"78": ""}, {"79": ""}, {"80": ""}], "ctags": [{"_type": "tag", "name": "NotesListComponent", "path": "/home/kavia/workspace/code-generation/personal-notes-app-29354-29372/notes_frontend/src/app/features/notes-list/notes-list.component.ts", "pattern": "/^export class NotesListComponent implements OnInit {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "hasTarget", "path": "/home/kavia/workspace/code-generation/personal-notes-app-29354-29372/notes_frontend/src/app/features/notes-list/notes-list.component.ts", "pattern": "/^    const hasTarget = (e: unknown): e is { target: { value?: unknown } | null } =>$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/personal-notes-app-29354-29372/notes_frontend/src/app/features/notes-list/notes-list.component.ts", "pattern": "/^    const id = match && match[1] !== 'new' ? match[1] : null;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "match", "path": "/home/kavia/workspace/code-generation/personal-notes-app-29354-29372/notes_frontend/src/app/features/notes-list/notes-list.component.ts", "pattern": "/^    const match = url.match(\\/\\\\\\/notes\\\\\\/([^\\\\\\/\\\\?]+)\\/);$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "notesService", "path": "/home/kavia/workspace/code-generation/personal-notes-app-29354-29372/notes_frontend/src/app/features/notes-list/notes-list.component.ts", "pattern": "/^  private readonly notesService = inject(NotesService);$/", "language": "TypeScript", "kind": "property", "scope": "NotesListComponent", "scopeKind": "class"}, {"_type": "tag", "name": "target", "path": "/home/kavia/workspace/code-generation/personal-notes-app-29354-29372/notes_frontend/src/app/features/notes-list/notes-list.component.ts", "pattern": "/^    const target = hasTarget(event) ? (event as { target: { value?: unknown } | null }).target :/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "target", "path": "/home/kavia/workspace/code-generation/personal-notes-app-29354-29372/notes_frontend/src/app/features/notes-list/notes-list.component.ts", "pattern": "/^    const val = target && typeof target.value === 'string' ? target.value : '';$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "text", "path": "/home/kavia/workspace/code-generation/personal-notes-app-29354-29372/notes_frontend/src/app/features/notes-list/notes-list.component.ts", "pattern": "/^    const text = (note.content ?? '').trim();$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "val", "path": "/home/kavia/workspace/code-generation/personal-notes-app-29354-29372/notes_frontend/src/app/features/notes-list/notes-list.component.ts", "pattern": "/^    const val = target && typeof target.value === 'string' ? target.value : '';$/", "language": "TypeScript", "kind": "constant"}], "hash": "d56a660675716ce8249b225584d4c26d", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/app/features/notes-list/notes-list.component.ts", "fields": [{"name": "private readonly notesService = inject(NotesService);", "scope": "NotesListComponent", "scopeKind": "class", "description": "unavailable"}]}