{"is_source_file": true, "format": "TypeScript", "description": "This TypeScript file defines an Angular service called StorageService that provides an abstraction over localStorage, allowing safe access, JSON serialization/deserialization, and error handling for storage operations.", "external_files": ["@angular/core"], "external_methods": ["Injectable"], "published": ["StorageService", "StorageService.NOTES_KEY"], "classes": [{"name": "StorageService", "description": "Angular service for safe localStorage access with JSON handling."}], "methods": [{"name": "private get storage(): any \\/* Storage | null *\\/ { storage", "description": "Private getter resolving a safe reference to localStorage, considering different runtime environments.", "scope": "StorageService", "scopeKind": "class"}, {"name": "read<T>(key: string): T | null { read", "description": "Reads a value from localStorage, parses it as JSON, and handles errors gracefully.", "scope": "StorageService", "scopeKind": "class"}, {"name": "write<T>(key: string, value: T): void { write", "description": "Serializes a value to JSON and stores it in localStorage, with error handling.", "scope": "StorageService", "scopeKind": "class"}, {"name": "remove(key: string): void { remove", "description": "Removes a key from localStorage safely.", "scope": "StorageService", "scopeKind": "class"}], "calls": ["localStorage.getItem", "localStorage.setItem", "localStorage.removeItem"], "search-terms": ["StorageService", "localStorage abstraction", "Angular service storage", "json parse stringification", "safe localStorage access"], "state": 2, "file_id": 22, "knowledge_revision": 48, "git_revision": "", "revision_history": [{"45": ""}, {"48": ""}], "ctags": [{"_type": "tag", "name": "NOTES_KEY", "path": "/home/kavia/workspace/code-generation/personal-notes-app-29354-29372/notes_frontend/src/app/services/storage.service.ts", "pattern": "/^  static readonly NOTES_KEY = 'notes.v1';$/", "language": "TypeScript", "kind": "property", "scope": "StorageService", "scopeKind": "class"}, {"_type": "tag", "name": "StorageService", "path": "/home/kavia/workspace/code-generation/personal-notes-app-29354-29372/notes_frontend/src/app/services/storage.service.ts", "pattern": "/^export class StorageService {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "g", "path": "/home/kavia/workspace/code-generation/personal-notes-app-29354-29372/notes_frontend/src/app/services/storage.service.ts", "pattern": "/^      const g: any = typeof globalThis !== 'undefined' ? globalThis : undefined;$/", "language": "TypeScript", "kind": "constant", "scope": "StorageService.storage", "scopeKind": "method"}, {"_type": "tag", "name": "ls", "path": "/home/kavia/workspace/code-generation/personal-notes-app-29354-29372/notes_frontend/src/app/services/storage.service.ts", "pattern": "/^      const ls = g.localStorage;$/", "language": "TypeScript", "kind": "constant", "scope": "StorageService.storage", "scopeKind": "method"}, {"_type": "tag", "name": "payload", "path": "/home/kavia/workspace/code-generation/personal-notes-app-29354-29372/notes_frontend/src/app/services/storage.service.ts", "pattern": "/^      const payload = JSON.stringify(value);$/", "language": "TypeScript", "kind": "constant", "scope": "StorageService.write", "scopeKind": "method"}, {"_type": "tag", "name": "raw", "path": "/home/kavia/workspace/code-generation/personal-notes-app-29354-29372/notes_frontend/src/app/services/storage.service.ts", "pattern": "/^      const raw = s.getItem(key);$/", "language": "TypeScript", "kind": "constant", "scope": "StorageService.read", "scopeKind": "method"}, {"_type": "tag", "name": "read", "path": "/home/kavia/workspace/code-generation/personal-notes-app-29354-29372/notes_frontend/src/app/services/storage.service.ts", "pattern": "/^  read<T>(key: string): T | null {$/", "language": "TypeScript", "kind": "method", "scope": "StorageService", "scopeKind": "class"}, {"_type": "tag", "name": "remove", "path": "/home/kavia/workspace/code-generation/personal-notes-app-29354-29372/notes_frontend/src/app/services/storage.service.ts", "pattern": "/^  remove(key: string): void {$/", "language": "TypeScript", "kind": "method", "scope": "StorageService", "scopeKind": "class"}, {"_type": "tag", "name": "s", "path": "/home/kavia/workspace/code-generation/personal-notes-app-29354-29372/notes_frontend/src/app/services/storage.service.ts", "pattern": "/^      const s = this.storage;$/", "language": "TypeScript", "kind": "constant", "scope": "StorageService.read", "scopeKind": "method"}, {"_type": "tag", "name": "s", "path": "/home/kavia/workspace/code-generation/personal-notes-app-29354-29372/notes_frontend/src/app/services/storage.service.ts", "pattern": "/^      const s = this.storage;$/", "language": "TypeScript", "kind": "constant", "scope": "StorageService.remove", "scopeKind": "method"}, {"_type": "tag", "name": "s", "path": "/home/kavia/workspace/code-generation/personal-notes-app-29354-29372/notes_frontend/src/app/services/storage.service.ts", "pattern": "/^      const s = this.storage;$/", "language": "TypeScript", "kind": "constant", "scope": "StorageService.write", "scopeKind": "method"}, {"_type": "tag", "name": "storage", "path": "/home/kavia/workspace/code-generation/personal-notes-app-29354-29372/notes_frontend/src/app/services/storage.service.ts", "pattern": "/^  private get storage(): any \\/* Storage | null *\\/ {$/", "language": "TypeScript", "kind": "method", "scope": "StorageService", "scopeKind": "class"}, {"_type": "tag", "name": "write", "path": "/home/kavia/workspace/code-generation/personal-notes-app-29354-29372/notes_frontend/src/app/services/storage.service.ts", "pattern": "/^  write<T>(key: string, value: T): void {$/", "language": "TypeScript", "kind": "method", "scope": "StorageService", "scopeKind": "class"}], "hash": "be5cde954ed5ad51af5126d5b7bc6210", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/app/services/storage.service.ts", "fields": [{"name": "static readonly NOTES_KEY = 'notes.v1';", "scope": "StorageService", "scopeKind": "class", "description": "unavailable"}]}